{"version":3,"sources":["../node_modules/react-flags-select/flags sync /^/.//.*/.svg$","assets/img/screen.svg","components/UIElements/Spinner.js","MapConfig/MapChart.js","MapConfig/PolygonSeries.js","MapConfig/MeaselsSeries.js","MapConfig/MapData.js","MapConfig/index.js","components/Map.js","components/Nav.js","components/UIElements/CountUp.js","util/countriesCode.js","components/CountryCases.js","components/GlobalCases.js","index.js","App.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","margin","style","className","MapChart","ele","this","am4core","am4themes_animated","chart","am4maps","geodata","am4geodata_worldLow","raiseCriticalError","panBehavior","projection","Orthographic","paddingValue","padding","seaColorHex","delLng","delLat","zoomControl","backgroundSeries","mapPolygons","template","polygon","fill","fillOpacity","deltaLongitude","deltaLatitude","adapter","add","delatLatitude","fitToRange","linesColor","graticuleSeries","series","push","mapLines","stroke","fitExtent","strokeOpacity","PolygonSeries","polygonSeries","useGeodata","calculateVisualCenter","tooltip","background","cornerRadius","nonScalingStroke","propertyFields","tooltipPosition","events","on","event","target","dummyData","isHover","hoverColor","hs","states","create","properties","MeaselsSeries","textColor","pointColor","hoverPointColor","measelsSeries","autoTextColor","label","dy","measelTemplate","hs2","MapData","data","each","mapPolygon","cases","confirmed","multiPolygon","visualLongitude","visualLatitude","Math","max","log","LN10","tooltipText","dataItem","dataContext","name","recovered","deaths","chartReg","buildMap","element","chartdiv","initMap","dispose","createMap","mapProjection","chartConfig","createPolygonSeries","hoverSeries","createMeaselsSeries","mapDataToMap","useState","isLoading","setIsLoading","mapEl","useRef","useEffect","getCountriesCases","a","url","fetch","response","json","dataArr","countries","filter","iso2","country","Promise","all","countriesData","countryISO2","detail","slice","countryData","value","reduce","acc","cur","assign","current","ref","shadow","setShadow","window","addEventListener","scrollY","exact","to","process","speed","start","count","setCount","inc","setTimeout","prevCount","position","round","AF","AL","DZ","AS","AD","AO","AI","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BA","BW","BR","IO","BG","BF","BI","KH","CM","CA","CV","KY","CF","TD","CL","CN","CO","KM","CG","CD","CK","CR","CI","HR","CU","CW","CY","CZ","DK","DJ","DM","DO","EC","EG","SV","GQ","ER","EE","ET","FK","FO","FJ","FI","FR","PF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GU","GT","GG","GN","GW","HT","HN","HK","HU","IS","IN","ID","IR","IQ","IE","IM","IL","IT","JM","JP","JE","JO","KZ","KE","KI","KP","KR","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MO","MK","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","MX","FM","MD","MC","MN","ME","MS","MA","MZ","MM","NA","NR","NP","NL","NZ","NI","NE","NG","NU","NF","MP","NO","OM","PK","PW","PS","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","RO","RU","RW","KN","WS","SM","ST","SA","SN","RS","SC","SL","SG","SX","SK","SI","SB","SO","ZA","SS","ES","LK","SD","SR","SZ","SE","CH","SY","TW","TJ","TZ","TH","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UY","UZ","VU","VE","VN","VI","YE","ZM","ZW","onSelect","customLabels","countriesCode","placeholder","searchable","searchPlaceholder","setConirmed","setRecovered","setDeaths","loading","setIsloading","error","setError","countryName","setCountryName","content","countryCodeToName","countryCode","toLowerCase","replace","onSelectCountry","fontSize","marginBottom","CountUp","src","globalIcon","alt","href","title","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"static/js/main.19db4ecc.chunk.js","sourcesContent":["var map = {\n\t\"./ad.svg\": 144,\n\t\"./ae.svg\": 145,\n\t\"./af.svg\": 146,\n\t\"./ag.svg\": 147,\n\t\"./ai.svg\": 148,\n\t\"./al.svg\": 149,\n\t\"./am.svg\": 150,\n\t\"./ao.svg\": 151,\n\t\"./ar.svg\": 152,\n\t\"./as.svg\": 153,\n\t\"./at.svg\": 154,\n\t\"./au.svg\": 155,\n\t\"./aw.svg\": 156,\n\t\"./az.svg\": 157,\n\t\"./ba.svg\": 158,\n\t\"./bb.svg\": 159,\n\t\"./bd.svg\": 160,\n\t\"./be.svg\": 161,\n\t\"./bf.svg\": 162,\n\t\"./bg.svg\": 163,\n\t\"./bh.svg\": 164,\n\t\"./bi.svg\": 165,\n\t\"./bj.svg\": 166,\n\t\"./bm.svg\": 167,\n\t\"./bo.svg\": 168,\n\t\"./br.svg\": 169,\n\t\"./bs.svg\": 170,\n\t\"./bt.svg\": 171,\n\t\"./bw.svg\": 172,\n\t\"./by.svg\": 173,\n\t\"./bz.svg\": 174,\n\t\"./ca.svg\": 175,\n\t\"./cd.svg\": 176,\n\t\"./cf.svg\": 177,\n\t\"./cg.svg\": 178,\n\t\"./ch.svg\": 179,\n\t\"./ci.svg\": 180,\n\t\"./ck.svg\": 181,\n\t\"./cl.svg\": 182,\n\t\"./cm.svg\": 183,\n\t\"./cn.svg\": 184,\n\t\"./co.svg\": 185,\n\t\"./cr.svg\": 186,\n\t\"./cu.svg\": 187,\n\t\"./cv.svg\": 188,\n\t\"./cw.svg\": 189,\n\t\"./cy.svg\": 190,\n\t\"./cz.svg\": 191,\n\t\"./de.svg\": 192,\n\t\"./dj.svg\": 193,\n\t\"./dk.svg\": 194,\n\t\"./dm.svg\": 195,\n\t\"./do.svg\": 196,\n\t\"./dz.svg\": 197,\n\t\"./ec.svg\": 198,\n\t\"./ee.svg\": 199,\n\t\"./eg.svg\": 200,\n\t\"./er.svg\": 201,\n\t\"./es.svg\": 202,\n\t\"./et.svg\": 203,\n\t\"./fi.svg\": 204,\n\t\"./fj.svg\": 205,\n\t\"./fk.svg\": 206,\n\t\"./fm.svg\": 207,\n\t\"./fo.svg\": 208,\n\t\"./fr.svg\": 209,\n\t\"./ga.svg\": 210,\n\t\"./gb.svg\": 211,\n\t\"./gd.svg\": 212,\n\t\"./ge.svg\": 213,\n\t\"./gg.svg\": 214,\n\t\"./gh.svg\": 215,\n\t\"./gi.svg\": 216,\n\t\"./gl.svg\": 217,\n\t\"./gm.svg\": 218,\n\t\"./gn.svg\": 219,\n\t\"./gq.svg\": 220,\n\t\"./gr.svg\": 221,\n\t\"./gt.svg\": 222,\n\t\"./gu.svg\": 223,\n\t\"./gw.svg\": 224,\n\t\"./hk.svg\": 225,\n\t\"./hn.svg\": 226,\n\t\"./hr.svg\": 227,\n\t\"./ht.svg\": 228,\n\t\"./hu.svg\": 229,\n\t\"./id.svg\": 230,\n\t\"./ie.svg\": 231,\n\t\"./il.svg\": 232,\n\t\"./im.svg\": 233,\n\t\"./in.svg\": 234,\n\t\"./io.svg\": 235,\n\t\"./iq.svg\": 236,\n\t\"./ir.svg\": 237,\n\t\"./is.svg\": 238,\n\t\"./it.svg\": 239,\n\t\"./je.svg\": 240,\n\t\"./jm.svg\": 241,\n\t\"./jo.svg\": 242,\n\t\"./jp.svg\": 243,\n\t\"./ke.svg\": 244,\n\t\"./kg.svg\": 245,\n\t\"./kh.svg\": 246,\n\t\"./ki.svg\": 247,\n\t\"./km.svg\": 248,\n\t\"./kn.svg\": 249,\n\t\"./kp.svg\": 250,\n\t\"./kr.svg\": 251,\n\t\"./kw.svg\": 252,\n\t\"./ky.svg\": 253,\n\t\"./kz.svg\": 254,\n\t\"./la.svg\": 255,\n\t\"./lb.svg\": 256,\n\t\"./li.svg\": 257,\n\t\"./lk.svg\": 258,\n\t\"./lr.svg\": 259,\n\t\"./ls.svg\": 260,\n\t\"./lt.svg\": 261,\n\t\"./lu.svg\": 262,\n\t\"./lv.svg\": 263,\n\t\"./ly.svg\": 264,\n\t\"./ma.svg\": 265,\n\t\"./mc.svg\": 266,\n\t\"./md.svg\": 267,\n\t\"./me.svg\": 268,\n\t\"./mg.svg\": 269,\n\t\"./mh.svg\": 270,\n\t\"./mk.svg\": 271,\n\t\"./ml.svg\": 272,\n\t\"./mm.svg\": 273,\n\t\"./mn.svg\": 274,\n\t\"./mo.svg\": 275,\n\t\"./mp.svg\": 276,\n\t\"./mq.svg\": 277,\n\t\"./mr.svg\": 278,\n\t\"./ms.svg\": 279,\n\t\"./mt.svg\": 280,\n\t\"./mu.svg\": 281,\n\t\"./mv.svg\": 282,\n\t\"./mw.svg\": 283,\n\t\"./mx.svg\": 284,\n\t\"./my.svg\": 285,\n\t\"./mz.svg\": 286,\n\t\"./na.svg\": 287,\n\t\"./nato.svg\": 288,\n\t\"./ne.svg\": 289,\n\t\"./nf.svg\": 290,\n\t\"./ng.svg\": 291,\n\t\"./ni.svg\": 292,\n\t\"./nl.svg\": 293,\n\t\"./no.svg\": 294,\n\t\"./np.svg\": 295,\n\t\"./nr.svg\": 296,\n\t\"./nu.svg\": 297,\n\t\"./nz.svg\": 298,\n\t\"./om.svg\": 299,\n\t\"./pa.svg\": 300,\n\t\"./pe.svg\": 301,\n\t\"./pf.svg\": 302,\n\t\"./pg.svg\": 303,\n\t\"./ph.svg\": 304,\n\t\"./pk.svg\": 305,\n\t\"./pl.svg\": 306,\n\t\"./pn.svg\": 307,\n\t\"./pr.svg\": 308,\n\t\"./ps.svg\": 309,\n\t\"./pt.svg\": 310,\n\t\"./pw.svg\": 311,\n\t\"./py.svg\": 312,\n\t\"./qa.svg\": 313,\n\t\"./ro.svg\": 314,\n\t\"./rs.svg\": 315,\n\t\"./ru.svg\": 316,\n\t\"./rw.svg\": 317,\n\t\"./sa.svg\": 318,\n\t\"./sb.svg\": 319,\n\t\"./sc.svg\": 320,\n\t\"./sd.svg\": 321,\n\t\"./se.svg\": 322,\n\t\"./sg.svg\": 323,\n\t\"./si.svg\": 324,\n\t\"./sk.svg\": 325,\n\t\"./sl.svg\": 326,\n\t\"./sm.svg\": 327,\n\t\"./sn.svg\": 328,\n\t\"./so.svg\": 329,\n\t\"./sr.svg\": 330,\n\t\"./ss.svg\": 331,\n\t\"./st.svg\": 332,\n\t\"./sv.svg\": 333,\n\t\"./sx.svg\": 334,\n\t\"./sy.svg\": 335,\n\t\"./sz.svg\": 336,\n\t\"./tc.svg\": 337,\n\t\"./td.svg\": 338,\n\t\"./tg.svg\": 339,\n\t\"./th.svg\": 340,\n\t\"./tibet.svg\": 341,\n\t\"./tj.svg\": 342,\n\t\"./tk.svg\": 343,\n\t\"./tm.svg\": 344,\n\t\"./tn.svg\": 345,\n\t\"./to.svg\": 346,\n\t\"./tr.svg\": 347,\n\t\"./tt.svg\": 348,\n\t\"./tv.svg\": 349,\n\t\"./tw.svg\": 350,\n\t\"./tz.svg\": 351,\n\t\"./ua.svg\": 352,\n\t\"./ug.svg\": 353,\n\t\"./us.svg\": 354,\n\t\"./uy.svg\": 355,\n\t\"./uz.svg\": 356,\n\t\"./ve.svg\": 357,\n\t\"./vi.svg\": 358,\n\t\"./vn.svg\": 359,\n\t\"./vu.svg\": 360,\n\t\"./ws.svg\": 361,\n\t\"./ye.svg\": 362,\n\t\"./za.svg\": 363,\n\t\"./zm.svg\": 364,\n\t\"./zw.svg\": 365\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 113;","module.exports = __webpack_public_path__ + \"static/media/screen.5168e07f.svg\";","import React from 'react';\n\nimport './Spinner.css';\n\nexport default ({ margin }) => (\n  <div style={{ margin: `${margin} auto` }} className='loader'>\n    Loading...\n  </div>\n);\n","import * as am4core from '@amcharts/amcharts4/core';\nimport * as am4maps from '@amcharts/amcharts4/maps';\nimport am4geodata_worldLow from '@amcharts/amcharts4-geodata/worldLow';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\n\nexport class MapChart {\n  constructor(ele) {\n    this.ele = ele;\n  }\n\n  static get chart() {\n    return this.chart;\n  }\n\n  createMap() {\n    /* Chart code */\n    // Themes begin\n    am4core.useTheme(am4themes_animated);\n    // Themes end\n    // Create map instance\n    let chart = am4core.create(this.ele, am4maps.MapChart);\n\n    try {\n      chart.geodata = am4geodata_worldLow;\n    } catch (e) {\n      chart.raiseCriticalError(\n        new Error(\n          'Map geodata could not be loaded. Please download the latest <a href=\"https://www.amcharts.com/download/download-v4/\">amcharts geodata</a> and extract its contents into the same directory as your amCharts files.'\n        )\n      );\n    }\n    this.chart = chart;\n    return chart;\n  }\n\n  mapProjection(panBehavior, ...paddingValue) {\n    // Set projection\n    this.chart.projection = new am4maps.projections.Orthographic();\n    this.chart.panBehavior = panBehavior;\n    this.chart.padding(...paddingValue);\n  }\n\n  chartConfig(seaColorHex, delLng, delLat) {\n    // Add zoom control\n\n    this.chart.zoomControl = new am4maps.ZoomControl();\n\n    this.chart.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color(\n      seaColorHex\n    );\n    this.chart.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 1;\n    this.chart.deltaLongitude = delLng;\n    this.chart.deltaLatitude = delLat;\n\n    // limits vertical rotation\n    this.chart.adapter.add('deltaLatitude', function(delatLatitude) {\n      return am4core.math.fitToRange(delatLatitude, -90, 90);\n    });\n  }\n\n  mapLines(linesColor) {\n    let graticuleSeries = this.chart.series.push(new am4maps.GraticuleSeries());\n    graticuleSeries.mapLines.template.stroke = am4core.color(linesColor);\n    graticuleSeries.fitExtent = false;\n    graticuleSeries.mapLines.template.strokeOpacity = 0.2;\n  }\n}\n","import * as am4core from '@amcharts/amcharts4/core';\nimport * as am4maps from '@amcharts/amcharts4/maps';\n\nexport class PolygonSeries {\n  constructor(chart) {\n    this.chart = chart;\n  }\n  createPolygonSeries() {\n    // Create map polygon series\n    let polygonSeries = this.chart.series.push(new am4maps.MapPolygonSeries());\n    polygonSeries.useGeodata = true;\n\n    polygonSeries.calculateVisualCenter = true;\n    polygonSeries.tooltip.background.fillOpacity = 1;\n    polygonSeries.tooltip.background.cornerRadius = 5;\n\n    let template = polygonSeries.mapPolygons.template;\n    template.nonScalingStroke = true;\n    template.fill = am4core.color('#212121');\n    template.stroke = am4core.color('#4e4e4e');\n\n    polygonSeries.calculateVisualCenter = true;\n    template.propertyFields.id = 'id';\n    template.tooltipPosition = 'fixed';\n    template.fillOpacity = 1;\n\n    template.events.on('over', function(event) {\n      if (event.target.dummyData) {\n        event.target.dummyData.isHover = true;\n      }\n    });\n    template.events.on('out', function(event) {\n      if (event.target.dummyData) {\n        event.target.dummyData.isHover = false;\n      }\n    });\n    this.polygonSeries = polygonSeries;\n    return polygonSeries;\n  }\n\n  hoverSeries(hoverColor) {\n    let hs = this.polygonSeries.mapPolygons.template.states.create('hover');\n    hs.properties.fillOpacity = 1;\n    hs.properties.fill = am4core.color(hoverColor);\n  }\n}\n","import * as am4core from '@amcharts/amcharts4/core';\nimport * as am4maps from '@amcharts/amcharts4/maps';\n\nexport class MeaselsSeries {\n  constructor(chart) {\n    this.chart = chart;\n  }\n\n  createMeaselsSeries(textColor, pointColor, hoverPointColor) {\n    let measelsSeries = this.chart.series.push(new am4maps.MapPolygonSeries());\n\n    measelsSeries.tooltip.background.fillOpacity = 1;\n    measelsSeries.tooltip.background.cornerRadius = 10;\n    measelsSeries.tooltip.autoTextColor = false;\n    measelsSeries.tooltip.label.fill = am4core.color(textColor); //'#000'\n    measelsSeries.tooltip.dy = -5;\n\n    let measelTemplate = measelsSeries.mapPolygons.template;\n    measelTemplate.fill = am4core.color(pointColor); //'#bf7569'\n    measelTemplate.strokeOpacity = 0;\n    measelTemplate.fillOpacity = 0.75;\n    measelTemplate.tooltipPosition = 'fixed';\n\n    let hs2 = measelsSeries.mapPolygons.template.states.create('hover');\n    hs2.properties.fillOpacity = 1;\n    hs2.properties.fill = am4core.color(hoverPointColor); //'#86240c'\n    return measelsSeries;\n  }\n}\n","import * as am4maps from '@amcharts/amcharts4/maps';\n\nexport class MapData {\n  constructor(polygonSeries, measelsSeries) {\n    this.polygonSeries = polygonSeries;\n    this.measelsSeries = measelsSeries;\n  }\n\n  mapDataToMap(data) {\n    this.polygonSeries.events.on('inited', () => {\n      this.polygonSeries.mapPolygons.each(mapPolygon => {\n        let cases = data[mapPolygon.id];\n\n        if (cases?.confirmed > 0) {\n          let polygon = this.measelsSeries.mapPolygons.create();\n          polygon.multiPolygon = am4maps.getCircle(\n            mapPolygon.visualLongitude,\n            mapPolygon.visualLatitude,\n            Math.max(0.2, (Math.log(cases.confirmed) * Math.LN10) / 10)\n          );\n          polygon.tooltipText = `${mapPolygon.dataItem.dataContext.name}: \n             الحالات المُسجلة : ${cases.confirmed}\n             حالات التعافي : ${cases.recovered}\n             حالات الوفاة : ${cases.deaths}\n            `;\n          mapPolygon.dummyData = polygon;\n          polygon.events.on('over', function() {\n            mapPolygon.isHover = true;\n          });\n          polygon.events.on('out', function() {\n            mapPolygon.isHover = false;\n          });\n        } else {\n          mapPolygon.tooltipText =\n            mapPolygon.dataItem.dataContext.name + ': لا توجد بيانات مٌسجلة';\n          mapPolygon.fillOpacity = 0.9;\n        }\n      });\n    });\n  }\n}\n","import { MapChart } from './MapChart';\nimport { PolygonSeries } from './PolygonSeries';\nimport { MeaselsSeries } from './MeaselsSeries';\nimport { MapData } from './MapData';\n\nconst chartReg = {};\nexport function buildMap(element, data) {\n  if (!element) {\n    return;\n  }\n\n  //init a and create map\n  const initMap = new MapChart(element);\n  //dispose old chart before render a new one\n  maybeDisposeChart(element);\n  initMap.createMap();\n\n  //refrence to old chart\n  chartReg[element] = initMap.chart;\n  //define map porjection\n  initMap.mapProjection('rotateLongLat', 20, 20, 20, 20);\n\n  // lng and lat to center map in first loading\n  const mapCenter = {\n    delLng: -30,\n    delLat: -30\n  };\n\n  const { delLng, delLat } = mapCenter;\n  // center map in first loading\n  initMap.chartConfig('#000000', delLng, delLat);\n\n  //create shadow when you move map\n  // drow map lines and set lines color\n  initMap.mapLines('#ff0000');\n\n  //define polygon series and set color when hover\n  const createPolygonSeries = new PolygonSeries(initMap.chart);\n  const polygonSeries = createPolygonSeries.createPolygonSeries();\n  createPolygonSeries.hoverSeries('#767E91');\n\n  // create point that represent data on map\n  const initMeaselsSeries = new MeaselsSeries(initMap.chart);\n\n  const measelsSeries = initMeaselsSeries.createMeaselsSeries(\n    '#eee',\n    '#B30000',\n    '#993400'\n  );\n\n  // '#B30000',\n  const mapData = new MapData(polygonSeries, measelsSeries);\n  mapData.mapDataToMap(data);\n}\n\nfunction maybeDisposeChart(chartdiv) {\n  if (chartReg[chartdiv]) {\n    chartReg[chartdiv].dispose();\n    delete chartReg[chartdiv];\n  }\n}\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport Spinner from './UIElements/Spinner';\nimport { buildMap } from '../MapConfig';\nimport './Map.css';\n\nexport default () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const mapEl = useRef();\n  useEffect(() => {\n    (async function() {\n      async function getCountriesCases(url) {\n        const response = await fetch(url);\n\n        const data = await response.json();\n\n        const dataArr = data.countries\n          .filter(countries => countries.iso2)\n          .map(country => `${url}/${country.iso2}`);\n\n        const countries = await Promise.all(\n          dataArr.map(async url => {\n            // rturn fetch(url).then(response => response.json());\n            const response = await fetch(url);\n            return await response.json();\n          })\n        );\n\n        const countriesData = countries\n          .filter(country => country.confirmed)\n          .map(country => {\n            const countryISO2 = country.confirmed.detail.slice(41, 43);\n            const countryData = {\n              confirmed: country.confirmed.value,\n              recovered: country.recovered.value,\n              deaths: country.deaths.value\n            };\n\n            return { [countryISO2]: countryData };\n          })\n          .reduce((acc, cur) => Object.assign(acc, cur), {});\n        return countriesData;\n      }\n\n      const data = await getCountriesCases(\n        'https://covid19.mathdro.id/api/countries'\n      );\n      setIsLoading(false);\n      buildMap(mapEl.current, data);\n    })();\n  }, []);\n\n  return isLoading ? (\n    <Spinner margin='15rem' />\n  ) : (\n    <div ref={mapEl} className='Map'></div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Nav.css';\n\nexport default () => {\n  const [shadow, setShadow] = useState('');\n  useEffect(() => {\n    window.addEventListener('scroll', () => {\n      if (window.scrollY > 0) {\n        setShadow('bg-shadow');\n      } else {\n        setShadow('');\n      }\n    });\n  }, []);\n  return (\n    <nav className={`navbar ${shadow}`}>\n      <ul>\n        <li>\n          <NavLink exact to={`${process.env.PUBLIC_URL}/`}>\n            الخريطة\n          </NavLink>\n        </li>\n        <li>\n          <NavLink exact to={`${process.env.PUBLIC_URL}/global`}>\n            حول العالم\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\nexport default ({ target, speed, start = 0 }) => {\n  const [count, setCount] = useState(start);\n  useEffect(() => {\n    let inc = target / speed;\n    if (count < target) {\n      setTimeout(() => setCount(prevCount => prevCount + inc));\n    } else {\n      setCount(target);\n    }\n  }, [count, speed, target]);\n\n  return <span style={{ position: 'relative' }}>{Math.round(count)}</span>;\n};\n","export default {\n  AF: 'Afghanistan',\n  AL: 'Albania',\n  DZ: 'Algeria',\n  AS: 'American Samoa',\n  AD: 'Andorra',\n  AO: 'Angola',\n  AI: 'Anguilla',\n  AG: 'Antigua and Barbuda',\n  AR: 'Argentina',\n  AM: 'Armenia',\n  AW: 'Aruba',\n  AU: 'Australia',\n  AT: 'Austria',\n  AZ: 'Azerbaijan',\n  BS: 'Bahamas',\n  BH: 'Bahrain',\n  BD: 'Bangladesh',\n  BB: 'Barbados',\n  BY: 'Belarus',\n  BE: 'Belgium',\n  BZ: 'Belize',\n  BJ: 'Benin',\n  BM: 'Bermuda',\n  BT: 'Bhutan',\n  BO: 'Bolivia, Plurinational State of',\n  BA: 'Bosnia and Herzegovina',\n  BW: 'Botswana',\n  BR: 'Brazil',\n  IO: 'British Indian Ocean Territory',\n  BG: 'Bulgaria',\n  BF: 'Burkina Faso',\n  BI: 'Burundi',\n  KH: 'Cambodia',\n  CM: 'Cameroon',\n  CA: 'Canada',\n  CV: 'Cape Verde',\n  KY: 'Cayman Islands',\n  CF: 'Central African Republic',\n  TD: 'Chad',\n  CL: 'Chile',\n  CN: 'China',\n  CO: 'Colombia',\n  KM: 'Comoros',\n  CG: 'Congo',\n  CD: 'Democratic Republic of the Congo',\n  CK: 'Cook Islands',\n  CR: 'Costa Rica',\n  CI: \"Côte d'Ivoire\",\n  HR: 'Croatia',\n  CU: 'Cuba',\n  CW: 'Curaçao',\n  CY: 'Cyprus',\n  CZ: 'Czech Republic',\n  DK: 'Denmark',\n  DJ: 'Djibouti',\n  DM: 'Dominica',\n  DO: 'Dominican Republic',\n  EC: 'Ecuador',\n  EG: 'Egypt',\n  SV: 'El Salvador',\n  GQ: 'Equatorial Guinea',\n  ER: 'Eritrea',\n  EE: 'Estonia',\n  ET: 'Ethiopia',\n  FK: 'Falkland Islands (Malvinas)',\n  FO: 'Faroe Islands',\n  FJ: 'Fiji',\n  FI: 'Finland',\n  FR: 'France',\n  PF: 'French Polynesia',\n  GA: 'Gabon',\n  GM: 'Gambia',\n  GE: 'Georgia',\n  DE: 'Germany',\n  GH: 'Ghana',\n  GI: 'Gibraltar',\n  GR: 'Greece',\n  GL: 'Greenland',\n  GD: 'Grenada',\n  GU: 'Guam',\n  GT: 'Guatemala',\n  GG: 'Guernsey',\n  GN: 'Guinea',\n  GW: 'Guinea-Bissau',\n  HT: 'Haiti',\n  HN: 'Honduras',\n  HK: 'Hong Kong',\n  HU: 'Hungary',\n  IS: 'Iceland',\n  IN: 'India',\n  ID: 'Indonesia',\n  IR: 'Iran, Islamic Republic of',\n  IQ: 'Iraq',\n  IE: 'Ireland',\n  IM: 'Isle of Man',\n  IL: 'Israel',\n  IT: 'Italy',\n  JM: 'Jamaica',\n  JP: 'Japan',\n  JE: 'Jersey',\n  JO: 'Jordan',\n  KZ: 'Kazakhstan',\n  KE: 'Kenya',\n  KI: 'Kiribati',\n  KP: 'North Korea',\n  KR: 'South Korea',\n  KW: 'Kuwait',\n  KG: 'Kyrgyzstan',\n  LA: \"Lao People's Democratic Republic\",\n  LV: 'Latvia',\n  LB: 'Lebanon',\n  LS: 'Lesotho',\n  LR: 'Liberia',\n  LY: 'Libya',\n  LI: 'Liechtenstein',\n  LT: 'Lithuania',\n  LU: 'Luxembourg',\n  MO: 'Macao',\n  MK: 'Republic of Macedonia',\n  MG: 'Madagascar',\n  MW: 'Malawi',\n  MY: 'Malaysia',\n  MV: 'Maldives',\n  ML: 'Mali',\n  MT: 'Malta',\n  MH: 'Marshall Islands',\n  MQ: 'Martinique',\n  MR: 'Mauritania',\n  MU: 'Mauritius',\n  MX: 'Mexico',\n  FM: 'Micronesia, Federated States of',\n  MD: 'Republic of Moldova',\n  MC: 'Monaco',\n  MN: 'Mongolia',\n  ME: 'Montenegro',\n  MS: 'Montserrat',\n  MA: 'Morocco',\n  MZ: 'Mozambique',\n  MM: 'Myanmar',\n  NA: 'Namibia',\n  NR: 'Nauru',\n  NP: 'Nepal',\n  NL: 'Netherlands',\n  NZ: 'New Zealand',\n  NI: 'Nicaragua',\n  NE: 'Niger',\n  NG: 'Nigeria',\n  NU: 'Niue',\n  NF: 'Norfolk Island',\n  MP: 'Northern Mariana Islands',\n  NO: 'Norway',\n  OM: 'Oman',\n  PK: 'Pakistan',\n  PW: 'Palau',\n  PS: 'Palestinian Territory',\n  PA: 'Panama',\n  PG: 'Papua New Guinea',\n  PY: 'Paraguay',\n  PE: 'Peru',\n  PH: 'Philippines',\n  PN: 'Pitcairn',\n  PL: 'Poland',\n  PT: 'Portugal',\n  PR: 'Puerto Rico',\n  QA: 'Qatar',\n  RO: 'Romania',\n  RU: 'Russian',\n  RW: 'Rwanda',\n  KN: 'Saint Kitts and Nevis',\n  WS: 'Samoa',\n  SM: 'San Marino',\n  ST: 'Sao Tome and Principe',\n  SA: 'Saudi Arabia',\n  SN: 'Senegal',\n  RS: 'Serbia',\n  SC: 'Seychelles',\n  SL: 'Sierra Leone',\n  SG: 'Singapore',\n  SX: 'Sint Maarten',\n  SK: 'Slovakia',\n  SI: 'Slovenia',\n  SB: 'Solomon Islands',\n  SO: 'Somalia',\n  ZA: 'South Africa',\n  SS: 'South Sudan',\n  ES: 'Spain',\n  LK: 'Sri Lanka',\n  SD: 'Sudan',\n  SR: 'Suriname',\n  SZ: 'Swaziland',\n  SE: 'Sweden',\n  CH: 'Switzerland',\n  SY: 'Syria',\n  TW: 'Taiwan, Province of China',\n  TJ: 'Tajikistan',\n  TZ: 'Tanzania',\n  TH: 'Thailand',\n  TG: 'Togo',\n  TK: 'Tokelau',\n  TO: 'Tonga',\n  TT: 'Trinidad and Tobago',\n  TN: 'Tunisia',\n  TR: 'Turkey',\n  TM: 'Turkmenistan',\n  TC: 'Turks and Caicos Islands',\n  TV: 'Tuvalu',\n  UG: 'Uganda',\n  UA: 'Ukraine',\n  AE: 'United Arab Emirates',\n  GB: 'United Kingdom',\n  US: 'United States',\n  UY: 'Uruguay',\n  UZ: 'Uzbekistan',\n  VU: 'Vanuatu',\n  VE: 'Venezuela, Bolivarian Republic of',\n  VN: 'Viet Nam',\n  VI: 'Virgin Islands',\n  YE: 'Yemen',\n  ZM: 'Zambia',\n  ZW: 'Zimbabwe'\n};\n","import React from 'react';\nimport ReactFlagsSelect from 'react-flags-select';\nimport countriesCode from '.././util/countriesCode';\n//import css module\nimport 'react-flags-select/css/react-flags-select.css';\nimport './CountryCases.css';\n\nexport default ({ onSelect }) => (\n  <ReactFlagsSelect\n    className='country-select'\n    customLabels={countriesCode}\n    placeholder='أختر دولة'\n    searchable={true}\n    searchPlaceholder='أبحث عن بلد'\n    onSelect={onSelect}\n  />\n);\n","import React, { useEffect, useState, Fragment } from 'react';\nimport CountUp from '../components/UIElements/CountUp';\nimport Spinner from './UIElements/Spinner';\nimport globalIcon from '../assets/img/screen.svg';\nimport CountryCases from './CountryCases';\nimport countries from '../util/countriesCode';\nimport './GlobalCases.css';\n\nexport default () => {\n  const [confirmed, setConirmed] = useState(0);\n  const [recovered, setRecovered] = useState(0);\n  const [deaths, setDeaths] = useState(0);\n  const [loading, setIsloading] = useState(true);\n  const [error, setError] = useState('');\n  const [countryName, setCountryName] = useState('');\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsloading(true);\n        const response = await fetch('https://covid19.mathdro.id/api');\n        const data = await response.json();\n        setConirmed(data.confirmed.value);\n        setRecovered(data.recovered.value);\n        setDeaths(data.deaths.value);\n        setIsloading(false);\n      } catch {\n        setError('حدث خطأ أثناء جلب البيانات');\n      }\n    })();\n  }, []);\n\n  const countryCodeToName = countryCode => {\n    const countryName = countries[countryCode]\n      .toLowerCase()\n      .replace(/\\s/g, '-');\n    setCountryName(countryName);\n  };\n\n  const onSelectCountry = async countryCode => {\n    countryCodeToName(countryCode);\n    setIsloading(true);\n    try {\n      const response = await fetch(\n        `https://covid19.mathdro.id/api/countries/${countryCode}`\n      );\n      const data = await response.json();\n      setConirmed(data.confirmed.value);\n      setRecovered(data.recovered.value);\n      setDeaths(data.deaths.value);\n      setIsloading(false);\n      setError('');\n    } catch {\n      setError('لا توجد بيانات');\n    }\n  };\n\n  let content;\n  if (error) {\n    content = (\n      <h1 className='deaths' style={{ fontSize: '2rem', marginBottom: '8rem' }}>\n        {error}\n      </h1>\n    );\n  } else if (loading) {\n    content = <Spinner margin='5rem' />;\n  } else {\n    content = (\n      <div className='container'>\n        <div>\n          <h2>الحالات المسجلة</h2>\n          <div className='number-circle confirmed'>\n            <CountUp target={confirmed} speed={200} />\n          </div>\n        </div>\n        <div>\n          <h2>حالات التعافي</h2>\n          <div className='number-circle recovered'>\n            <CountUp target={recovered} speed={200} />\n          </div>\n        </div>\n        <div>\n          <h2>حالات الوفاة</h2>\n          <div className='number-circle deaths'>\n            <CountUp target={deaths} speed={200} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <CountryCases onSelect={onSelectCountry} />\n      <section className='global'>\n        <img\n          className={countryName ? 'img-size' : ''}\n          src={\n            countryName\n              ? `https://assets.thebasetrip.com/api/v2/countries/flags/${countryName}.svg`\n              : globalIcon\n          }\n          alt={countryName ? countryName : 'global'}\n        />\n        {content}\n      </section>\n      <footer>\n        {' '}\n        <a href='https://github.com/0DKhalid'> &copy; Khalid Ayed </a>\n        <div>\n          Icons made by{' '}\n          <a href='https://www.flaticon.com/authors/freepik' title='Freepik'>\n            Freepik\n          </a>{' '}\n          from{' '}\n          <a href='https://www.flaticon.com/' title='Flaticon'>\n            www.flaticon.com\n          </a>\n        </div>\n      </footer>\n    </Fragment>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Map from './components/Map';\nimport Nav from './components/Nav';\nimport GlobalCases from './components/GlobalCases';\n\nexport default () => (\n  <Router>\n    <Nav />\n    <Route exact path={`${process.env.PUBLIC_URL}/`}>\n      <Map />\n    </Route>\n    <Route exact path={`${process.env.PUBLIC_URL}/global`}>\n      <GlobalCases />\n    </Route>\n  </Router>\n);\n"],"sourceRoot":""}